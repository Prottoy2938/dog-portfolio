{"version":3,"sources":["DogList.js","DogDetails.js","Navbar.js","App.js","serviceWorker.js","index.js"],"names":["DogList","className","this","props","dogs","map","d","key","name","src","alt","Component","DogDetails","dog","age","facts","fact","idx","to","Navbar","dogLinks","exact","data-toggle","type","data-target","aria-controls","aria-expanded","aria-label","id","App","console","log","path","render","component","match","params","currentDog","find","toLowerCase","defaultProps","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3ca518e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./DogList.css\";\r\n\r\nexport default class DogList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Doglist\">\r\n        <h1 className=\"display-1 text-center\">Dog App</h1>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            {this.props.dogs.map(d => (\r\n              <div className=\"Dog col-md-6 col-lg-4  text-center\" key={d.name}>\r\n                <img src={d.src} alt={d.name} />\r\n                <h3>{d.name}</h3>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./DogDetails.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class DogDetails extends Component {\r\n  render() {\r\n    let { dog } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"DogDetails row justify-content-center mt-5\">\r\n          <div className=\"col-12 col-lg-8\">\r\n            <div className=\"DogDetails-card card d-flex justify-content-center\">\r\n              <img src={dog.src} alt={dog.name} className=\"card-img-top\" />\r\n              <div className=\"card-body\">\r\n                <h2 className=\"card-title\">{dog.name}</h2>\r\n                <h4 className=\"card-subtitle text-muted\">\r\n                  {dog.age} years old\r\n                </h4>\r\n              </div>\r\n              <ul className=\"list-group list-group-flush\">\r\n                {dog.facts.map((fact, idx) => (\r\n                  <li className=\"list-group-item\" key={idx}>\r\n                    {fact}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n              <div className=\"card-body\">\r\n                <Link to=\"/dogs\" className=\"btn btn-info\">\r\n                  Go Back\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    const dogLinks = this.props.dogs.map(dog => (\r\n      <li className=\"nav-item\" key={dog.name}>\r\n        <NavLink exact className=\"nav-link\" to={`/dogs/${dog.name}`}>\r\n          {dog.name}\r\n        </NavLink>\r\n      </li>\r\n    ));\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <Link className=\"navbar-brand\" to=\"/dogs\">\r\n          dogs\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          data-toggle=\"collapse\"\r\n          type=\"button\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">{dogLinks}</ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport DogList from \"./DogList\";\nimport DogDetails from \"./DogDetails\";\nimport Navbar from \"./Navbar\";\n// import Homepage from \"./Homepage\";\n// import Navbar from \"./Navbar\";\n// import Redirector from \"./Redirector\";\n\nclass App extends Component {\n  static defaultProps = {\n    dogs: [\n      {\n        name: \"Whiskey\",\n        age: 5,\n        src:\n          \"https://images.pexels.com/photos/1254140/pexels-photo-1254140.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\n        facts: [\n          \"Whiskey loves eating popcorn.\",\n          \"Whiskey is a terrible guard dog.\",\n          \"Whiskey wants to cuddle with you!\"\n        ]\n      },\n      {\n        name: \"Hazel\",\n        age: 3,\n        src:\n          \"https://images.pexels.com/photos/825947/pexels-photo-825947.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\n        facts: [\n          \"Hazel has soooo much energy!\",\n          \"Hazel is highly intelligent.\",\n          \"Hazel loves people more than dogs.\"\n        ]\n      },\n      {\n        name: \"Tubby\",\n        age: 4,\n        src:\n          \"https://images.pexels.com/photos/69372/pexels-photo-69372.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\",\n        facts: [\n          \"Tubby is not the brightest dog\",\n          \"Tubby does not like walks or exercise.\",\n          \"Tubby loves eating food.\"\n        ]\n      }\n    ]\n  };\n  render() {\n    console.log(\"Dog icon icon by Icons8\");\n\n    const getDog = props => {\n      let name = props.match.params.name;\n      let currentDog = this.props.dogs.find(\n        dog => dog.name.toLowerCase() === name.toLowerCase()\n      );\n\n      return <DogDetails {...props} dog={currentDog} />;\n    };\n\n    return (\n      <div>\n        <Navbar dogs={this.props.dogs} />\n        <Switch>\n          <Route\n            exact\n            path=\"/dog-portfolio\"\n            render={() => <DogList dogs={this.props.dogs} />}\n          />\n          <Route\n            exact\n            path=\"/dogs\"\n            render={() => <DogList dogs={this.props.dogs} />}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <DogList dogs={this.props.dogs} />}\n          />\n          <Route exact path=\"/dogs/:name\" component={getDog} />} />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <DogList dogs={this.props.dogs} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}